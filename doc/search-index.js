var searchIndex = {};
searchIndex["mach_object"] = {"doc":"Mach-O File Format Parser for Rust","items":[[3,"SegmentFlags","mach_object","Constants for the flags field of the segment_command",null,null],[3,"SectionAttributes","","Constants for the section attributes part of the flags field of a section structure.",null,null],[3,"ExportSymbolFlags","","The following are used on the flags byte of a terminal node in the export information.",null,null],[3,"VersionTag","","The encoded version.",null,null],[3,"SourceVersionTag","","The packed version.",null,null],[3,"LcString","","A variable length string in a load command is represented by an LcString structure.",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[3,"FvmLib","","Fixed virtual memory shared libraries are identified by two things.",null,null],[12,"name","","library&#39;s target pathname",1,null],[12,"minor_version","","library&#39;s minor version number",1,null],[12,"header_addr","","library&#39;s header address",1,null],[3,"DyLib","","Dynamicly linked shared libraries are identified by two things.",null,null],[12,"name","","library&#39;s path name",2,null],[12,"timestamp","","library&#39;s build time stamp",2,null],[12,"current_version","","library&#39;s current version number",2,null],[12,"compatibility_version","","library&#39;s compatibility vers number",2,null],[3,"DyLibTocEntry","","a table of contents entry",null,null],[12,"symbol_index","","the defined external symbol (index into the symbol table)",3,null],[12,"module_index","","index into the module table this symbol is defined in",3,null],[3,"DyLibModule","","a module table entry",null,null],[12,"module_name","","the module name (index into string table)",4,null],[12,"iextdefsym","","index into externally defined symbols",4,null],[12,"nextdefsym","","number of externally defined symbols",4,null],[12,"irefsym","","index into reference symbol table",4,null],[12,"nrefsym","","number of reference symbol table entries",4,null],[12,"ilocalsym","","index into symbols for local symbols",4,null],[12,"nlocalsym","","number of local symbols",4,null],[12,"iextrel","","index into external relocation entries",4,null],[12,"nextrel","","number of external relocation entries",4,null],[12,"iinit_iterm","","low 16 bits are the index into the init section,\nhigh 16 bits are the index into the term section",4,null],[12,"ninit_nterm","","low 16 bits are the number of init section entries,\nhigh 16 bits are the number of term section entries",4,null],[12,"objc_module_info_addr","","for this module address of the start of the (__OBJC,__module_info) section",4,null],[12,"objc_module_info_size","","for this module size of the (__OBJC,__module_info) section",4,null],[3,"LinkEditData","","The linkedit_data_command contains the offsets and sizes of a blob\nof data in the __LINKEDIT segment.",null,null],[12,"off","","file offset of data in __LINKEDIT segment",5,null],[12,"size","","file size of data in __LINKEDIT segment",5,null],[3,"SectionFlags","","The flags field of a section structure is separated into two parts a section\ntype and section attributes.",null,null],[3,"Section","","A segment is made up of zero or more sections.",null,null],[12,"sectname","","name of this section",6,null],[12,"segname","","segment this section goes in",6,null],[12,"addr","","memory address of this section",6,null],[12,"size","","size in bytes of this section",6,null],[12,"offset","","file offset of this section",6,null],[12,"align","","section alignment (power of 2)",6,null],[12,"reloff","","file offset of relocation entries",6,null],[12,"nreloc","","number of relocation entries",6,null],[12,"flags","","",6,null],[12,"reserved1","","reserved (for offset or index)",6,null],[12,"reserved2","","reserved (for count or sizeof)",6,null],[12,"reserved3","","reserved",6,null],[3,"DataInCodeEntry","","The LC_DATA_IN_CODE load commands uses a linkedit_data_command\nto point to an array of data_in_code_entry entries.",null,null],[12,"offset","","",7,null],[12,"length","","",7,null],[12,"kind","","",7,null],[3,"MachHeader","","The mach header appears at the very beginning of the object file",null,null],[12,"magic","","mach magic number identifier",8,null],[12,"cputype","","cpu specifier",8,null],[12,"cpusubtype","","machine specifier",8,null],[12,"filetype","","type of file",8,null],[12,"ncmds","","number of load commands",8,null],[12,"sizeofcmds","","the size of all the load commands",8,null],[12,"flags","","flags",8,null],[3,"MachCommand","","Wrap load command with size in the Mach-O file",null,null],[12,"0","","",9,null],[12,"1","","",9,null],[3,"FatArch","","For each architecture in the file, specified by a pair of cputype and cpusubtype,\nthe FatArch describes the file offset, file size and alignment\nin the file of the architecture specific member.",null,null],[12,"cputype","","cpu specifier (int)",10,null],[12,"cpusubtype","","machine specifier (int)",10,null],[12,"offset","","file offset to this object file",10,null],[12,"size","","size of this object file",10,null],[12,"align","","alignment as a power of 2",10,null],[3,"FatHeader","","The structures of the file format for &quot;fat&quot; architecture specific file (wrapper design).\nAt the begining of the file there is one FatHeader structure followed by a number of FatArch\nstructures.",null,null],[12,"magic","","fat magic number identifier",11,null],[12,"archs","","number of structs that follow",11,null],[3,"ArHeader","","the archive file header",null,null],[12,"ar_name","","",12,null],[12,"ar_date","","modification time",12,null],[12,"ar_uid","","user id",12,null],[12,"ar_gid","","group id",12,null],[12,"ar_mode","","octal file permissions",12,null],[12,"ar_size","","size in bytes",12,null],[12,"ar_fmag","","consistency check",12,null],[12,"ar_member_name","","extended format #1",12,null],[3,"RanLib","","Structure of the __.SYMDEF table of contents for an archive.",null,null],[12,"ran_strx","","",13,null],[12,"ran_off","","",13,null],[3,"SymbolIter","","`Symbol` Iter",null,null],[4,"Error","","",null,null],[13,"Utf8Error","","",14,null],[13,"FromUtf8Error","","",14,null],[13,"UuidParseError","","",14,null],[13,"IoError","","",14,null],[13,"TimeParseError","","",14,null],[13,"ParseIntError","","",14,null],[13,"ParseOctalError","","",14,null],[13,"LoadError","","",14,null],[4,"BuildTarget","","The min OS version on which this binary was built to run.",null,null],[13,"MacOsX","","",15,null],[13,"IPhoneOs","","",15,null],[13,"WatchOs","","",15,null],[13,"TvOs","","",15,null],[4,"LoadCommand","","The load commands directly follow the mach_header.",null,null],[13,"Segment","","The segment load command indicates that a part of this file is to be\nmapped into the task&#39;s address space.",16,null],[12,"segname","mach_object::LoadCommand","segment name",16,null],[12,"vmaddr","","memory address of this segment",16,null],[12,"vmsize","","memory size of this segment",16,null],[12,"fileoff","","file offset of this segment",16,null],[12,"filesize","","amount to map from the file",16,null],[12,"maxprot","","maximum VM protection",16,null],[12,"initprot","","initial VM protection",16,null],[12,"flags","","flags",16,null],[12,"sections","","sections",16,null],[13,"Segment64","mach_object","The 64-bit segment load command indicates that a part of this file is to be\nmapped into a 64-bit task&#39;s address space.",16,null],[12,"segname","mach_object::LoadCommand","segment name",16,null],[12,"vmaddr","","memory address of this segment",16,null],[12,"vmsize","","memory size of this segment",16,null],[12,"fileoff","","file offset of this segment",16,null],[12,"filesize","","amount to map from the file",16,null],[12,"maxprot","","maximum VM protection",16,null],[12,"initprot","","initial VM protection",16,null],[12,"flags","","flags",16,null],[12,"sections","","sections",16,null],[13,"IdFvmLib","mach_object","fixed VM shared library identification",16,null],[13,"LoadFvmLib","","load a specified fixed VM shared library",16,null],[13,"IdDyLib","","dynamically linked shared lib ident",16,null],[13,"LoadDyLib","","load a dynamically linked shared library",16,null],[13,"LoadWeakDyLib","","load a dynamically linked shared library\nthat is allowed to be missing (all symbols are weak imported).",16,null],[13,"ReexportDyLib","","load and re-export dylib",16,null],[13,"LoadUpwardDylib","","load upward dylib",16,null],[13,"LazyLoadDylib","","delay load of dylib until first use",16,null],[13,"IdDyLinker","","dynamic linker identification",16,null],[13,"LoadDyLinker","","load a dynamic linker",16,null],[13,"DyLdEnv","","string for dyld to treat like environment variable",16,null],[13,"SymTab","","The symtab_command contains the offsets and sizes of the link-edit 4.3BSD\n&quot;stab&quot; style symbol table information as described in the header files\n&lt;nlist.h&gt; and &lt;stab.h&gt;.",16,null],[12,"symoff","mach_object::LoadCommand","symbol table offset",16,null],[12,"nsyms","","number of symbol table entries",16,null],[12,"stroff","","string table offset",16,null],[12,"strsize","","string table size in bytes",16,null],[13,"DySymTab","mach_object","This is the second set of the symbolic information which is used to support\nthe data structures for the dynamically link editor.",16,null],[12,"ilocalsym","mach_object::LoadCommand","index to local symbols",16,null],[12,"nlocalsym","","number of local symbols",16,null],[12,"iextdefsym","","index to externally defined symbols",16,null],[12,"nextdefsym","","number of externally defined symbols",16,null],[12,"iundefsym","","index to undefined symbols",16,null],[12,"nundefsym","","number of undefined symbols",16,null],[12,"tocoff","","file offset to table of contents",16,null],[12,"ntoc","","number of entries in table of contents",16,null],[12,"modtaboff","","file offset to module table",16,null],[12,"nmodtab","","number of module table entries",16,null],[12,"extrefsymoff","","offset to referenced symbol table",16,null],[12,"nextrefsyms","","number of referenced symbol table entries",16,null],[12,"indirectsymoff","","file offset to the indirect symbol table",16,null],[12,"nindirectsyms","","number of indirect symbol table entries",16,null],[12,"extreloff","","offset to external relocation entries",16,null],[12,"nextrel","","number of external relocation entries",16,null],[12,"locreloff","","offset to local relocation entries",16,null],[12,"nlocrel","","number of local relocation entries",16,null],[13,"Uuid","mach_object","The uuid load command contains a single 128-bit unique random number that\nidentifies an object produced by the static link editor.",16,null],[13,"CodeSignature","","local of code signature",16,null],[13,"SegmentSplitInfo","","local of info to split segments",16,null],[13,"FunctionStarts","","compressed table of function start addresses",16,null],[13,"DataInCode","","table of non-instructions in __text",16,null],[13,"DylibCodeSignDrs","","Code signing DRs copied from linked dylibs",16,null],[13,"LinkerOptimizationHint","","optimization hints in MH_OBJECT files",16,null],[13,"VersionMin","","The version_min_command contains the min OS version on which this\nbinary was built to run.",16,null],[12,"target","mach_object::LoadCommand","",16,null],[12,"version","","",16,null],[12,"sdk","","",16,null],[13,"DyldInfo","mach_object","The dyld_info_command contains the file offsets and sizes of\nthe new compressed form of the information dyld needs to\nload the image.  This information is used by dyld on Mac OS X\n10.6 and later.  All information pointed to by this command\nis encoded using byte streams, so no endian swapping is needed\nto interpret it.",16,null],[12,"rebase_off","mach_object::LoadCommand","file offset to rebase info",16,null],[12,"rebase_size","","size of rebase info",16,null],[12,"bind_off","","file offset to binding info",16,null],[12,"bind_size","","size of binding info",16,null],[12,"weak_bind_off","","file offset to weak binding info",16,null],[12,"weak_bind_size","","size of weak binding info",16,null],[12,"lazy_bind_off","","file offset to lazy binding info",16,null],[12,"lazy_bind_size","","size of lazy binding infs",16,null],[12,"export_off","","file offset to lazy binding info",16,null],[12,"export_size","","size of lazy binding infs",16,null],[13,"EntryPoint","mach_object","The entry_point_command is a replacement for thread_command.\nIt is used for main executables to specify the location (file offset)\nof main().  If -stack_size was used at link time, the stacksize\nfield will contain the stack size need for the main thread.",16,null],[12,"entryoff","mach_object::LoadCommand","file (__TEXT) offset of main()",16,null],[12,"stacksize","","if not zero, initial stack size",16,null],[13,"SourceVersion","mach_object","The source_version_command is an optional load command containing\nthe version of the sources used to build the binary.",16,null],[13,"Command","","",16,null],[12,"cmd","mach_object::LoadCommand","type of load command",16,null],[12,"payload","","",16,null],[4,"OFile","mach_object","The abstract file block, including mach-o file, fat/universal file,\narchive file and symdef block",null,null],[13,"MachFile","","",17,null],[12,"header","mach_object::OFile","",17,null],[12,"commands","","",17,null],[13,"FatFile","mach_object","",17,null],[12,"magic","mach_object::OFile","",17,null],[12,"files","","",17,null],[13,"ArFile","mach_object","",17,null],[12,"files","mach_object::OFile","",17,null],[13,"SymDef","mach_object","",17,null],[12,"ranlibs","mach_object::OFile","",17,null],[4,"Symbol","mach_object","the link-edit 4.3BSD &quot;stab&quot; style symbol",null,null],[13,"Undefined","","",18,null],[12,"name","mach_object::Symbol","",18,null],[12,"external","","",18,null],[12,"desc","","",18,null],[13,"Absolute","mach_object","",18,null],[12,"name","mach_object::Symbol","",18,null],[12,"external","","",18,null],[12,"desc","","",18,null],[12,"entry","","",18,null],[13,"Defined","mach_object","",18,null],[12,"name","mach_object::Symbol","",18,null],[12,"external","","",18,null],[12,"section","","",18,null],[12,"desc","","",18,null],[12,"entry","","",18,null],[13,"Prebound","mach_object","",18,null],[12,"name","mach_object::Symbol","",18,null],[12,"external","","",18,null],[12,"desc","","",18,null],[13,"Indirect","mach_object","",18,null],[12,"name","mach_object::Symbol","",18,null],[12,"external","","",18,null],[12,"desc","","",18,null],[12,"symbol","","",18,null],[13,"Debug","mach_object","",18,null],[12,"name","mach_object::Symbol","",18,null],[12,"section","","",18,null],[12,"desc","","",18,null],[12,"addr","","",18,null],[5,"get_cpu_subtype_type","mach_object","",null,{"inputs":[{"name":"cpu_subtype_t"}],"output":{"name":"u32"}}],[5,"get_cpu_subtype_feature","","",null,{"inputs":[{"name":"cpu_subtype_t"}],"output":{"name":"u32"}}],[5,"get_arch_from_flag","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"get_arch_name_from_types","","",null,{"inputs":[{"name":"cpu_type_t"},{"name":"cpu_subtype_t"}],"output":{"name":"option"}}],[11,"hash","","",19,null],[11,"cmp","","",19,null],[11,"partial_cmp","","",19,null],[11,"lt","","",19,null],[11,"le","","",19,null],[11,"gt","","",19,null],[11,"ge","","",19,null],[11,"clone","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"fmt","","",19,null],[11,"empty","","Returns an empty set of flags.",19,{"inputs":[],"output":{"name":"segmentflags"}}],[11,"all","","Returns the set containing all flags.",19,{"inputs":[],"output":{"name":"segmentflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",19,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",19,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",19,{"inputs":[{"name":"u32"}],"output":{"name":"segmentflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",19,null],[11,"is_all","","Returns `true` if all flags are currently set.",19,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",19,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",19,null],[11,"insert","","Inserts the specified flags in-place.",19,null],[11,"remove","","Removes the specified flags in-place.",19,null],[11,"toggle","","Toggles the specified flags in-place.",19,null],[11,"bitor","","Returns the union of the two sets of flags.",19,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",19,null],[11,"bitand","","Returns the intersection between the two sets of flags.",19,null],[11,"sub","","Returns the set difference of the two sets of flags.",19,null],[11,"not","","Returns the complement of this set of flags.",19,null],[11,"from_iter","","",19,{"inputs":[{"name":"t"}],"output":{"name":"segmentflags"}}],[11,"hash","","",20,null],[11,"cmp","","",20,null],[11,"partial_cmp","","",20,null],[11,"lt","","",20,null],[11,"le","","",20,null],[11,"gt","","",20,null],[11,"ge","","",20,null],[11,"clone","","",20,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"fmt","","",20,null],[11,"empty","","Returns an empty set of flags.",20,{"inputs":[],"output":{"name":"sectionattributes"}}],[11,"all","","Returns the set containing all flags.",20,{"inputs":[],"output":{"name":"sectionattributes"}}],[11,"bits","","Returns the raw value of the flags currently stored.",20,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",20,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",20,{"inputs":[{"name":"u32"}],"output":{"name":"sectionattributes"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,null],[11,"is_all","","Returns `true` if all flags are currently set.",20,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",20,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",20,null],[11,"insert","","Inserts the specified flags in-place.",20,null],[11,"remove","","Removes the specified flags in-place.",20,null],[11,"toggle","","Toggles the specified flags in-place.",20,null],[11,"bitor","","Returns the union of the two sets of flags.",20,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",20,null],[11,"bitand","","Returns the intersection between the two sets of flags.",20,null],[11,"sub","","Returns the set difference of the two sets of flags.",20,null],[11,"not","","Returns the complement of this set of flags.",20,null],[11,"from_iter","","",20,{"inputs":[{"name":"t"}],"output":{"name":"sectionattributes"}}],[11,"hash","","",21,null],[11,"cmp","","",21,null],[11,"partial_cmp","","",21,null],[11,"lt","","",21,null],[11,"le","","",21,null],[11,"gt","","",21,null],[11,"ge","","",21,null],[11,"clone","","",21,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"fmt","","",21,null],[11,"empty","","Returns an empty set of flags.",21,{"inputs":[],"output":{"name":"exportsymbolflags"}}],[11,"all","","Returns the set containing all flags.",21,{"inputs":[],"output":{"name":"exportsymbolflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",21,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",21,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",21,{"inputs":[{"name":"u32"}],"output":{"name":"exportsymbolflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",21,null],[11,"is_all","","Returns `true` if all flags are currently set.",21,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",21,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",21,null],[11,"insert","","Inserts the specified flags in-place.",21,null],[11,"remove","","Removes the specified flags in-place.",21,null],[11,"toggle","","Toggles the specified flags in-place.",21,null],[11,"bitor","","Returns the union of the two sets of flags.",21,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",21,null],[11,"bitand","","Returns the intersection between the two sets of flags.",21,null],[11,"sub","","Returns the set difference of the two sets of flags.",21,null],[11,"not","","Returns the complement of this set of flags.",21,null],[11,"from_iter","","",21,{"inputs":[{"name":"t"}],"output":{"name":"exportsymbolflags"}}],[11,"fmt","","",14,null],[11,"fmt","","",14,null],[11,"description","","",14,null],[11,"cause","","",14,null],[11,"from","","",14,{"inputs":[{"name":"utf8error"}],"output":{"name":"self"}}],[11,"from","","",14,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"self"}}],[11,"from","","",14,{"inputs":[{"name":"parseerror"}],"output":{"name":"self"}}],[11,"from","","",14,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",14,{"inputs":[{"name":"parseerror"}],"output":{"name":"self"}}],[11,"from","","",14,{"inputs":[{"name":"parseinterror"}],"output":{"name":"self"}}],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"clone","","",22,null],[11,"default","","",22,{"inputs":[],"output":{"name":"versiontag"}}],[11,"fmt","","",22,null],[11,"major","","",22,null],[11,"minor","","",22,null],[11,"release","","",22,null],[11,"into","","",22,null],[11,"fmt","","",22,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"clone","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"sourceversiontag"}}],[11,"fmt","","",23,null],[11,"into","","",23,null],[11,"into","","",23,null],[11,"fmt","","",23,null],[11,"eq","","",15,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"from","","",15,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"into","","",15,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"lcstring"}}],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"fvmlib"}}],[11,"fmt","","",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"dylib"}}],[11,"fmt","","",2,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"default","","",5,{"inputs":[],"output":{"name":"linkeditdata"}}],[11,"fmt","","",5,null],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"parse","","",16,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"cmd","","",16,null],[11,"name","","",16,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"sect_type","","",24,null],[11,"sect_attrs","","",24,null],[11,"into","","",24,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"clone","","",8,null],[11,"default","","",8,{"inputs":[],"output":{"name":"machheader"}}],[11,"fmt","","",8,null],[11,"is_64bit","","",8,null],[11,"is_bigend","","",8,null],[11,"fmt","","",8,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",11,null],[11,"default","","",11,{"inputs":[],"output":{"name":"fatheader"}}],[11,"fmt","","",11,null],[11,"fmt","","",11,null],[11,"clone","","",10,null],[11,"default","","",10,{"inputs":[],"output":{"name":"fatarch"}}],[11,"fmt","","",10,null],[11,"clone","","",12,null],[11,"default","","",12,{"inputs":[],"output":{"name":"arheader"}}],[11,"fmt","","",12,null],[11,"fmt","","",12,null],[11,"clone","","",13,null],[11,"default","","",13,{"inputs":[],"output":{"name":"ranlib"}}],[11,"fmt","","",13,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"parse","","Parse a file base on its magic number",17,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","","",18,null],[11,"name","","",18,null],[11,"is_external","","",18,null],[11,"fmt","","",18,null],[11,"desc","","",18,null],[11,"parse_symbol","","",25,null],[11,"next","","",25,null],[11,"symbols","","",17,null],[6,"cpu_type_t","","",null,null],[6,"cpu_subtype_t","","",null,null],[6,"vm_prot_t","","",null,null],[6,"off_t","","",null,null],[7,"SEG_PAGEZERO","","the pagezero segment which has no protections and catches NULL references for MH_EXECUTE files",null,null],[7,"SEG_TEXT","","the tradition UNIX text segment",null,null],[7,"SECT_TEXT","","the real text part of the text",null,null],[7,"SECT_FVMLIB_INIT0","","the fvmlib initialization section",null,null],[7,"SECT_FVMLIB_INIT1","","the section following the fvmlib initialization section",null,null],[7,"SEG_DATA","","the tradition UNIX data segment",null,null],[7,"SECT_DATA","","the real initialized data section no padding, no bss overlap",null,null],[7,"SECT_BSS","","the real uninitialized data section no padding",null,null],[7,"SECT_COMMON","","the section common symbols are allocated in by the link editor",null,null],[7,"SEG_OBJC","","objective-C runtime segment",null,null],[7,"SECT_OBJC_SYMBOLS","","symbol table",null,null],[7,"SECT_OBJC_MODULES","","module information",null,null],[7,"SECT_OBJC_STRINGS","","string table",null,null],[7,"SECT_OBJC_REFS","","string table",null,null],[7,"SEG_ICON","","the icon segment",null,null],[7,"SECT_ICON_HEADER","","the icon headers",null,null],[7,"SECT_ICON_TIFF","","the icons in tiff format",null,null],[7,"SEG_LINKEDIT","","the segment containing all structs created and maintained by the link editor.\nCreated with -seglinkedit option to ld(1) for MH_EXECUTE and FVMLIB file types only",null,null],[7,"SEG_UNIXSTACK","","the unix stack segment",null,null],[7,"SEG_IMPORT","","the segment for the self (dyld) modifing code stubs that has read, write and execute permissions",null,null],[17,"CPU_ARCH_MASK","","mask for architecture bits",null,null],[17,"CPU_ARCH_ABI64","","64 bit ABI",null,null],[17,"CPU_TYPE_ANY","","",null,null],[17,"CPU_TYPE_VAX","","",null,null],[17,"CPU_TYPE_MC680X0","","",null,null],[17,"CPU_TYPE_X86","","",null,null],[17,"CPU_TYPE_I386","","",null,null],[17,"CPU_TYPE_X86_64","","",null,null],[17,"CPU_TYPE_MIPS","","",null,null],[17,"CPU_TYPE_MC98000","","",null,null],[17,"CPU_TYPE_HPPA","","",null,null],[17,"CPU_TYPE_ARM","","",null,null],[17,"CPU_TYPE_ARM64","","",null,null],[17,"CPU_TYPE_MC88000","","",null,null],[17,"CPU_TYPE_SPARC","","",null,null],[17,"CPU_TYPE_I860","","",null,null],[17,"CPU_TYPE_ALPHA","","",null,null],[17,"CPU_TYPE_POWERPC","","",null,null],[17,"CPU_TYPE_POWERPC64","","",null,null],[17,"CPU_SUBTYPE_MASK","","mask for feature flags",null,null],[17,"CPU_SUBTYPE_LIB64","","64 bit libraries",null,null],[17,"CPU_SUBTYPE_MULTIPLE","","",null,null],[17,"CPU_SUBTYPE_LITTLE_ENDIAN","","",null,null],[17,"CPU_SUBTYPE_BIG_ENDIAN","","",null,null],[17,"CPU_SUBTYPE_VAX_ALL","","",null,null],[17,"CPU_SUBTYPE_VAX780","","",null,null],[17,"CPU_SUBTYPE_VAX785","","",null,null],[17,"CPU_SUBTYPE_VAX750","","",null,null],[17,"CPU_SUBTYPE_VAX730","","",null,null],[17,"CPU_SUBTYPE_UVAXI","","",null,null],[17,"CPU_SUBTYPE_UVAXII","","",null,null],[17,"CPU_SUBTYPE_VAX8200","","",null,null],[17,"CPU_SUBTYPE_VAX8500","","",null,null],[17,"CPU_SUBTYPE_VAX8600","","",null,null],[17,"CPU_SUBTYPE_VAX8650","","",null,null],[17,"CPU_SUBTYPE_VAX8800","","",null,null],[17,"CPU_SUBTYPE_UVAXIII","","",null,null],[17,"CPU_SUBTYPE_MC680X0_ALL","","",null,null],[17,"CPU_SUBTYPE_MC68030","","",null,null],[17,"CPU_SUBTYPE_MC68040","","",null,null],[17,"CPU_SUBTYPE_MC68030_ONLY","","",null,null],[17,"CPU_SUBTYPE_I386_ALL","","",null,null],[17,"CPU_SUBTYPE_386","","",null,null],[17,"CPU_SUBTYPE_486","","",null,null],[17,"CPU_SUBTYPE_486SX","","",null,null],[17,"CPU_SUBTYPE_586","","",null,null],[17,"CPU_SUBTYPE_PENT","","",null,null],[17,"CPU_SUBTYPE_PENTPRO","","",null,null],[17,"CPU_SUBTYPE_PENTII_M3","","",null,null],[17,"CPU_SUBTYPE_PENTII_M5","","",null,null],[17,"CPU_SUBTYPE_CELERON","","",null,null],[17,"CPU_SUBTYPE_CELERON_MOBILE","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3_M","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3_XEON","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_M","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_4","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_4_M","","",null,null],[17,"CPU_SUBTYPE_ITANIUM","","",null,null],[17,"CPU_SUBTYPE_ITANIUM_2","","",null,null],[17,"CPU_SUBTYPE_XEON","","",null,null],[17,"CPU_SUBTYPE_XEON_MP","","",null,null],[17,"CPU_SUBTYPE_INTEL_FAMILY_MAX","","",null,null],[17,"CPU_SUBTYPE_INTEL_MODEL_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_64_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_ARCH1","","",null,null],[17,"CPU_SUBTYPE_X86_64_H","","",null,null],[17,"CPU_SUBTYPE_MIPS_ALL","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2300","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2600","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2800","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2000A","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2000","","",null,null],[17,"CPU_SUBTYPE_MIPS_R3000A","","",null,null],[17,"CPU_SUBTYPE_MIPS_R3000","","",null,null],[17,"CPU_SUBTYPE_MC98000_ALL","","",null,null],[17,"CPU_SUBTYPE_MC98601","","",null,null],[17,"CPU_SUBTYPE_HPPA_ALL","","",null,null],[17,"CPU_SUBTYPE_HPPA_7100","","",null,null],[17,"CPU_SUBTYPE_HPPA_7100LC","","",null,null],[17,"CPU_SUBTYPE_MC88000_ALL","","",null,null],[17,"CPU_SUBTYPE_MC88100","","",null,null],[17,"CPU_SUBTYPE_MC88110","","",null,null],[17,"CPU_SUBTYPE_SPARC_ALL","","",null,null],[17,"CPU_SUBTYPE_I860_ALL","","",null,null],[17,"CPU_SUBTYPE_I860_860","","",null,null],[17,"CPU_SUBTYPE_POWERPC_ALL","","",null,null],[17,"CPU_SUBTYPE_POWERPC_601","","",null,null],[17,"CPU_SUBTYPE_POWERPC_602","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603E","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603EV","","",null,null],[17,"CPU_SUBTYPE_POWERPC_604","","",null,null],[17,"CPU_SUBTYPE_POWERPC_604E","","",null,null],[17,"CPU_SUBTYPE_POWERPC_620","","",null,null],[17,"CPU_SUBTYPE_POWERPC_750","","",null,null],[17,"CPU_SUBTYPE_POWERPC_7400","","",null,null],[17,"CPU_SUBTYPE_POWERPC_7450","","",null,null],[17,"CPU_SUBTYPE_POWERPC_970","","",null,null],[17,"CPU_SUBTYPE_ARM_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM_V4T","","",null,null],[17,"CPU_SUBTYPE_ARM_V6","","",null,null],[17,"CPU_SUBTYPE_ARM_V5TEJ","","",null,null],[17,"CPU_SUBTYPE_ARM_XSCALE","","",null,null],[17,"CPU_SUBTYPE_ARM_V7","","",null,null],[17,"CPU_SUBTYPE_ARM_V7F","","",null,null],[17,"CPU_SUBTYPE_ARM_V7S","","",null,null],[17,"CPU_SUBTYPE_ARM_V7K","","",null,null],[17,"CPU_SUBTYPE_ARM_V6M","","",null,null],[17,"CPU_SUBTYPE_ARM_V7M","","",null,null],[17,"CPU_SUBTYPE_ARM_V7EM","","",null,null],[17,"CPU_SUBTYPE_ARM_V8","","",null,null],[17,"CPU_SUBTYPE_ARM64_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM64_V8","","",null,null],[17,"MH_MAGIC","","the mach magic number",null,null],[17,"MH_CIGAM","","NXSwapInt(MH_MAGIC)",null,null],[17,"MH_MAGIC_64","","the 64-bit mach magic number",null,null],[17,"MH_CIGAM_64","","NXSwapInt(MH_MAGIC_64)",null,null],[17,"FAT_MAGIC","","",null,null],[17,"FAT_CIGAM","","",null,null],[17,"ARMAG","","",null,null],[17,"AR_EFMT1","","",null,null],[17,"SYMDEF","","",null,null],[17,"SYMDEF_SORTED","","",null,null],[17,"MH_OBJECT","","relocatable object file",null,null],[17,"MH_EXECUTE","","demand paged executable file",null,null],[17,"MH_FVMLIB","","fixed VM shared library file",null,null],[17,"MH_CORE","","core file",null,null],[17,"MH_PRELOAD","","preloaded executable file",null,null],[17,"MH_DYLIB","","dynamically bound shared library",null,null],[17,"MH_DYLINKER","","dynamic link editor",null,null],[17,"MH_BUNDLE","","dynamically bound bundle file",null,null],[17,"MH_DYLIB_STUB","","shared library stub for static linking only, no section contents",null,null],[17,"MH_DSYM","","companion file with only debug sections",null,null],[17,"MH_KEXT_BUNDLE","","x86_64 kexts",null,null],[17,"MH_NOUNDEFS","","the object file has no undefined references",null,null],[17,"MH_INCRLINK","","the object file is the output of an incremental link\nagainst a base file and can&#39;t be link edited again",null,null],[17,"MH_DYLDLINK","","",null,null],[17,"MH_BINDATLOAD","","",null,null],[17,"MH_PREBOUND","","the file has its dynamic undefined references prebound.",null,null],[17,"MH_SPLIT_SEGS","","the file has its read-only and read-write segments split",null,null],[17,"MH_LAZY_INIT","","the shared library init routine is to be run lazily\nvia catching memory faults to its writeable segments (obsolete)",null,null],[17,"MH_TWOLEVEL","","the image is using two-level name space bindings",null,null],[17,"MH_FORCE_FLAT","","the executable is forcing all images to use flat name space bindings",null,null],[17,"MH_NOMULTIDEFS","","this umbrella guarantees no multiple defintions of symbols\nin its sub-images so the two-level namespace hints can always be used.",null,null],[17,"MH_NOFIXPREBINDING","","do not have dyld notify the prebinding agent about this executable",null,null],[17,"MH_PREBINDABLE","","the binary is not prebound but can have its prebinding redone.\nonly used when MH_PREBOUND is not set.",null,null],[17,"MH_ALLMODSBOUND","","indicates that this binary binds to all two-level namespace modules of its dependent libraries.\nonly used when MH_PREBINDABLE and MH_TWOLEVEL are both set.",null,null],[17,"MH_SUBSECTIONS_VIA_SYMBOLS","","safe to divide up the sections into sub-sections via symbols for dead code stripping",null,null],[17,"MH_CANONICAL","","the binary has been canonicalized via the unprebind operation",null,null],[17,"MH_WEAK_DEFINES","","the final linked image contains external weak symbols",null,null],[17,"MH_BINDS_TO_WEAK","","the final linked image uses weak symbols",null,null],[17,"MH_ALLOW_STACK_EXECUTION","","When this bit is set, all stacks in the task will be given stack execution privilege.\nOnly used in MH_EXECUTE filetypes.",null,null],[17,"MH_ROOT_SAFE","","When this bit is set, the binary declares it is safe\nfor use in processes with uid zero",null,null],[17,"MH_SETUID_SAFE","","When this bit is set, the binary declares it is safe\nfor use in processes when issetugid() is true",null,null],[17,"MH_NO_REEXPORTED_DYLIBS","","When this bit is set on a dylib, the static linker does not need to examine dependent dylibs\nto see if any are re-exported",null,null],[17,"MH_PIE","","When this bit is set, the OS will load the main executable at a random address.\nOnly used in MH_EXECUTE filetypes.",null,null],[17,"MH_DEAD_STRIPPABLE_DYLIB","","Only for use on dylibs.  When linking against a dylib that has this bit set,\nthe static linker will automatically not create a LC_LOAD_DYLIB load command\nto the dylib if no symbols are being referenced from the dylib.",null,null],[17,"MH_HAS_TLV_DESCRIPTORS","","Contains a section of type S_THREAD_LOCAL_VARIABLES",null,null],[17,"MH_NO_HEAP_EXECUTION","","When this bit is set, the OS will run the main executable\nwith a non-executable heap even on platforms (e.g. i386)\nthat don&#39;t require it. Only used in MH_EXECUTE filetypes.",null,null],[17,"MH_APP_EXTENSION_SAFE","","The code was linked for use in an application extension.",null,null],[17,"LC_REQ_DYLD","","",null,null],[17,"LC_SEGMENT","","",null,null],[17,"LC_SYMTAB","","link-edit stab symbol table info",null,null],[17,"LC_SYMSEG","","link-edit gdb symbol table info (obsolete)",null,null],[17,"LC_THREAD","","thread",null,null],[17,"LC_UNIXTHREAD","","unix thread (includes a stack)",null,null],[17,"LC_LOADFVMLIB","","load a specified fixed VM shared library",null,null],[17,"LC_IDFVMLIB","","fixed VM shared library identification",null,null],[17,"LC_IDENT","","object identification info (obsolete)",null,null],[17,"LC_FVMFILE","","fixed VM file inclusion (internal use)",null,null],[17,"LC_PREPAGE","","prepage command (internal use)",null,null],[17,"LC_DYSYMTAB","","dynamic link-edit symbol table info",null,null],[17,"LC_LOAD_DYLIB","","load a dynamically linked shared library",null,null],[17,"LC_ID_DYLIB","","dynamically linked shared lib ident",null,null],[17,"LC_LOAD_DYLINKER","","load a dynamic linker",null,null],[17,"LC_ID_DYLINKER","","dynamic linker identification",null,null],[17,"LC_PREBOUND_DYLIB","","modules prebound for a dynamically",null,null],[17,"LC_ROUTINES","","",null,null],[17,"LC_SUB_FRAMEWORK","","sub framework",null,null],[17,"LC_SUB_UMBRELLA","","sub umbrella",null,null],[17,"LC_SUB_CLIENT","","sub client",null,null],[17,"LC_SUB_LIBRARY","","sub library",null,null],[17,"LC_TWOLEVEL_HINTS","","two-level namespace lookup hints",null,null],[17,"LC_PREBIND_CKSUM","","prebind checksum",null,null],[17,"LC_LOAD_WEAK_DYLIB","","",null,null],[17,"LC_SEGMENT_64","","64-bit segment of this file to be mapped",null,null],[17,"LC_ROUTINES_64","","64-bit image routines",null,null],[17,"LC_UUID","","the uuid",null,null],[17,"LC_RPATH","","runpath additions",null,null],[17,"LC_CODE_SIGNATURE","","local of code signature",null,null],[17,"LC_SEGMENT_SPLIT_INFO","","local of info to split segments",null,null],[17,"LC_REEXPORT_DYLIB","","load and re-export dylib",null,null],[17,"LC_LAZY_LOAD_DYLIB","","delay load of dylib until first use",null,null],[17,"LC_ENCRYPTION_INFO","","encrypted segment information",null,null],[17,"LC_DYLD_INFO","","compressed dyld information",null,null],[17,"LC_DYLD_INFO_ONLY","","compressed dyld information only",null,null],[17,"LC_LOAD_UPWARD_DYLIB","","load upward dylib",null,null],[17,"LC_VERSION_MIN_MACOSX","","build for MacOSX min OS version",null,null],[17,"LC_VERSION_MIN_IPHONEOS","","build for iPhoneOS min OS version",null,null],[17,"LC_FUNCTION_STARTS","","compressed table of function start addresses",null,null],[17,"LC_DYLD_ENVIRONMENT","","string for dyld to treat like environment variable",null,null],[17,"LC_MAIN","","replacement for LC_UNIXTHREAD",null,null],[17,"LC_DATA_IN_CODE","","table of non-instructions in __text",null,null],[17,"LC_SOURCE_VERSION","","source version used to build binary",null,null],[17,"LC_DYLIB_CODE_SIGN_DRS","","Code signing DRs copied from linked dylibs",null,null],[17,"LC_ENCRYPTION_INFO_64","","64-bit encrypted segment information",null,null],[17,"LC_LINKER_OPTION","","linker options in MH_OBJECT files",null,null],[17,"LC_LINKER_OPTIMIZATION_HINT","","optimization hints in MH_OBJECT files",null,null],[17,"LC_VERSION_MIN_TVOS","","build for AppleTV min OS version",null,null],[17,"LC_VERSION_MIN_WATCHOS","","build for Watch min OS version",null,null],[17,"SG_HIGHVM","","the file contents for this segment is for the high part of the VM space,\nthe low part is zero filled (for stacks in core files)",null,null],[17,"SG_FVMLIB","","this segment is the VM that is allocated by a fixed VM library,\nfor overlap checking in the link editor",null,null],[17,"SG_NORELOC","","this segment has nothing that was relocated in it and nothing relocated to it,\nthat is it maybe safely replaced without relocation",null,null],[17,"SG_PROTECTED_VERSION_1","","This segment is protected.  If the segment starts at file offset 0,\nthe first page of the segment is not protected.\nAll other pages of the segment are protected.",null,null],[17,"SECTION_TYPE","","",null,null],[17,"SECTION_ATTRIBUTES","","",null,null],[17,"S_REGULAR","","regular section",null,null],[17,"S_ZEROFILL","","zero fill on demand section",null,null],[17,"S_CSTRING_LITERALS","","section with only literal C strings",null,null],[17,"S_4BYTE_LITERALS","","section with only 4 byte literals",null,null],[17,"S_8BYTE_LITERALS","","section with only 8 byte literals",null,null],[17,"S_LITERAL_POINTERS","","section with only pointers to literals",null,null],[17,"S_NON_LAZY_SYMBOL_POINTERS","","section with only non-lazy symbol pointers",null,null],[17,"S_LAZY_SYMBOL_POINTERS","","section with only lazy symbol pointers",null,null],[17,"S_SYMBOL_STUBS","","section with only symbol stubs, byte size of stub in the reserved2 field",null,null],[17,"S_MOD_INIT_FUNC_POINTERS","","section with only function pointers for initialization",null,null],[17,"S_MOD_TERM_FUNC_POINTERS","","section with only function pointers for termination",null,null],[17,"S_COALESCED","","section contains symbols that are to be coalesced",null,null],[17,"S_GB_ZEROFILL","","zero fill on demand section that can be larger than 4 gigabytes)",null,null],[17,"S_INTERPOSING","","section with only pairs of function pointers for interposing",null,null],[17,"S_16BYTE_LITERALS","","section with only 16 byte literals",null,null],[17,"S_DTRACE_DOF","","section contains DTrace Object Format",null,null],[17,"S_LAZY_DYLIB_SYMBOL_POINTERS","","section with only lazy symbol pointers to lazy loaded dylibs",null,null],[17,"S_THREAD_LOCAL_REGULAR","","template of initial values for TLVs",null,null],[17,"S_THREAD_LOCAL_ZEROFILL","","template of initial values for TLVs",null,null],[17,"S_THREAD_LOCAL_VARIABLES","","TLV descriptors",null,null],[17,"S_THREAD_LOCAL_VARIABLE_POINTERS","","pointers to TLV descriptors",null,null],[17,"S_THREAD_LOCAL_INIT_FUNCTION_POINTERS","","functions to call to initialize TLV values",null,null],[17,"SECTION_ATTRIBUTES_USR","","User setable attributes",null,null],[17,"S_ATTR_PURE_INSTRUCTIONS","","section contains only true machine instructions",null,null],[17,"S_ATTR_NO_TOC","","section contains coalesced symbols that are not to be in a ranlib table of contents",null,null],[17,"S_ATTR_STRIP_STATIC_SYMS","","ok to strip static symbols in this section in files with the MH_DYLDLINK flag",null,null],[17,"S_ATTR_NO_DEAD_STRIP","","no dead stripping",null,null],[17,"S_ATTR_LIVE_SUPPORT","","blocks are live if they reference live blocks",null,null],[17,"S_ATTR_SELF_MODIFYING_CODE","","Used with i386 code stubs written on by dyld",null,null],[17,"S_ATTR_DEBUG","","a debug section",null,null],[17,"SECTION_ATTRIBUTES_SYS","","system setable attributes",null,null],[17,"S_ATTR_SOME_INSTRUCTIONS","","section contains some machine instructions",null,null],[17,"S_ATTR_EXT_RELOC","","section has external relocation entries",null,null],[17,"S_ATTR_LOC_RELOC","","section has local relocation entries",null,null],[17,"INDIRECT_SYMBOL_LOCAL","","",null,null],[17,"INDIRECT_SYMBOL_ABS","","",null,null],[17,"REBASE_TYPE_POINTER","","",null,null],[17,"REBASE_TYPE_TEXT_ABSOLUTE32","","",null,null],[17,"REBASE_TYPE_TEXT_PCREL32","","",null,null],[17,"REBASE_OPCODE_MASK","","",null,null],[17,"REBASE_IMMEDIATE_MASK","","",null,null],[17,"REBASE_OPCODE_DONE","","",null,null],[17,"REBASE_OPCODE_SET_TYPE_IMM","","",null,null],[17,"REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB","","",null,null],[17,"REBASE_OPCODE_ADD_ADDR_ULEB","","",null,null],[17,"REBASE_OPCODE_ADD_ADDR_IMM_SCALED","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_IMM_TIMES","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_ULEB_TIMES","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB","","",null,null],[17,"BIND_TYPE_POINTER","","",null,null],[17,"BIND_TYPE_TEXT_ABSOLUTE32","","",null,null],[17,"BIND_TYPE_TEXT_PCREL32","","",null,null],[17,"BIND_SPECIAL_DYLIB_SELF","","",null,null],[17,"BIND_SPECIAL_DYLIB_MAIN_EXECUTABLE","","",null,null],[17,"BIND_SPECIAL_DYLIB_FLAT_LOOKUP","","",null,null],[17,"BIND_SYMBOL_FLAGS_WEAK_IMPORT","","",null,null],[17,"BIND_SYMBOL_FLAGS_NON_WEAK_DEFINITION","","",null,null],[17,"BIND_OPCODE_MASK","","",null,null],[17,"BIND_IMMEDIATE_MASK","","",null,null],[17,"BIND_OPCODE_DONE","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_IMM","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_SPECIAL_IMM","","",null,null],[17,"BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM","","",null,null],[17,"BIND_OPCODE_SET_TYPE_IMM","","",null,null],[17,"BIND_OPCODE_SET_ADDEND_SLEB","","",null,null],[17,"BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB","","",null,null],[17,"BIND_OPCODE_ADD_ADDR_ULEB","","",null,null],[17,"BIND_OPCODE_DO_BIND","","",null,null],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB","","",null,null],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED","","",null,null],[17,"BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_MASK","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_REGULAR","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_THREAD_LOCAL","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_WEAK_DEFINITION","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_REEXPORT","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER","","",null,null],[17,"DICE_KIND_DATA","","",null,null],[17,"DICE_KIND_JUMP_TABLE8","","",null,null],[17,"DICE_KIND_JUMP_TABLE16","","",null,null],[17,"DICE_KIND_JUMP_TABLE32","","",null,null],[17,"DICE_KIND_ABS_JUMP_TABLE32","","",null,null],[17,"N_GSYM","","global symbol: name,,NO_SECT,type,0",null,null],[17,"N_FNAME","","procedure name (f77 kludge): name,,NO_SECT,0,0",null,null],[17,"N_FUN","","procedure: name,,n_sect,linenumber,address",null,null],[17,"N_STSYM","","static symbol: name,,n_sect,type,address",null,null],[17,"N_LCSYM","",".lcomm symbol: name,,n_sect,type,address",null,null],[17,"N_BNSYM","","begin nsect sym: 0,,n_sect,0,address",null,null],[17,"N_AST","","AST file path: name,,NO_SECT,0,0",null,null],[17,"N_OPT","","emitted with gcc2_compiled and in gcc source",null,null],[17,"N_RSYM","","register sym: name,,NO_SECT,type,register",null,null],[17,"N_SLINE","","src line: 0,,n_sect,linenumber,address",null,null],[17,"N_ENSYM","","end nsect sym: 0,,n_sect,0,address",null,null],[17,"N_SSYM","","structure elt: name,,NO_SECT,type,struct_offset",null,null],[17,"N_SO","","source file name: name,,n_sect,0,address",null,null],[17,"N_OSO","","object file name: name,,0,0,st_mtime",null,null],[17,"N_LSYM","","local sym: name,,NO_SECT,type,offset",null,null],[17,"N_BINCL","","include file beginning: name,,NO_SECT,0,sum",null,null],[17,"N_SOL","","#included file name: name,,n_sect,0,address",null,null],[17,"N_PARAMS","","compiler parameters: name,,NO_SECT,0,0",null,null],[17,"N_VERSION","","compiler version: name,,NO_SECT,0,0",null,null],[17,"N_OLEVEL","","compiler -O level: name,,NO_SECT,0,0",null,null],[17,"N_PSYM","","parameter: name,,NO_SECT,type,offset",null,null],[17,"N_EINCL","","include file end: name,,NO_SECT,0,0",null,null],[17,"N_ENTRY","","alternate entry: name,,n_sect,linenumber,address",null,null],[17,"N_LBRAC","","left bracket: 0,,NO_SECT,nesting level,address",null,null],[17,"N_EXCL","","deleted include file: name,,NO_SECT,0,sum",null,null],[17,"N_RBRAC","","right bracket: 0,,NO_SECT,nesting level,address",null,null],[17,"N_BCOMM","","begin common: name,,NO_SECT,0,0",null,null],[17,"N_ECOMM","","end common: name,,n_sect,0,0",null,null],[17,"N_ECOML","","end common (local name): 0,,n_sect,0,address",null,null],[17,"N_LENG","","second stab entry with length information",null,null],[17,"N_PC","","global pascal symbol: name,,NO_SECT,subtype,line",null,null],[17,"REFERENCE_TYPE","","To support the lazy binding of undefined symbols in the dynamic link-editor,\nthe undefined symbols in the symbol table (the nlist structures) are marked\nwith the indication if the undefined reference is a lazy reference or\nnon-lazy reference.  If both a non-lazy reference and a lazy reference is\nmade to the same symbol the non-lazy reference takes precedence.  A reference\nis lazy only when all references to that symbol are made through a symbol\npointer in a lazy symbol pointer section.",null,null],[17,"REFERENCE_FLAG_UNDEFINED_NON_LAZY","","",null,null],[17,"REFERENCE_FLAG_UNDEFINED_LAZY","","",null,null],[17,"REFERENCE_FLAG_DEFINED","","",null,null],[17,"REFERENCE_FLAG_PRIVATE_DEFINED","","",null,null],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY","","",null,null],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY","","",null,null],[17,"REFERENCED_DYNAMICALLY","","To simplify stripping of objects that use are used with the dynamic link\neditor, the static link editor marks the symbols defined an object that are\nreferenced by a dynamicly bound object (dynamic shared libraries, bundles).\nWith this marking strip knows not to strip these symbols.",null,null],[17,"SELF_LIBRARY_ORDINAL","","",null,null],[17,"MAX_LIBRARY_ORDINAL","","",null,null],[17,"DYNAMIC_LOOKUP_ORDINAL","","",null,null],[17,"EXECUTABLE_ORDINAL","","",null,null],[17,"N_NO_DEAD_STRIP","","The N_NO_DEAD_STRIP bit of the n_desc field only ever appears in a\nrelocatable .o file (MH_OBJECT filetype). And is used to indicate to the\nstatic link editor it is never to dead strip the symbol.",null,null],[17,"N_DESC_DISCARDED","","The N_DESC_DISCARDED bit of the n_desc field never appears in linked image.\nBut is used in very rare cases by the dynamic link editor to mark an in\nmemory symbol as discared and longer used for linking.",null,null],[17,"N_WEAK_REF","","The N_WEAK_REF bit of the n_desc field indicates to the dynamic linker that\nthe undefined symbol is allowed to be missing and is to have the address of\nzero when missing.",null,null],[17,"N_WEAK_DEF","","The N_WEAK_DEF bit of the n_desc field indicates to the static and dynamic\nlinkers that the symbol definition is weak, allowing a non-weak symbol to\nalso be used which causes the weak definition to be discared.  Currently this\nis only supported for symbols in coalesed sections.",null,null],[17,"N_REF_TO_WEAK","","The N_REF_TO_WEAK bit of the n_desc field indicates to the dynamic linker\nthat the undefined symbol should be resolved using flat namespace searching.",null,null],[17,"N_ARM_THUMB_DEF","","The N_ARM_THUMB_DEF bit of the n_desc field indicates that the symbol is\na defintion of a Thumb function.",null,null],[17,"N_SYMBOL_RESOLVER","","The N_SYMBOL_RESOLVER bit of the n_desc field indicates that the\nthat the function is actually a resolver function and should\nbe called to get the address of the real function to use.\nThis bit is only available in .o files (MH_OBJECT filetype)",null,null],[17,"N_ALT_ENTRY","","The N_ALT_ENTRY bit of the n_desc field indicates that the\nsymbol is pinned to the previous content.",null,null],[8,"ReadStringExt","","Read a fixed size string",null,null],[11,"read_fixed_size_string","","Read the fixed size string",26,null],[8,"SymbolReference","","Reference type and flags of symbol",null,null],[10,"desc","","raw `desc` value",27,null],[11,"ref_type","","types of references",27,null],[11,"is_ref_dyn","","To simplify stripping of objects that use are used with the dynamic link\neditor, the static link editor marks the symbols defined an object that are\nreferenced by a dynamicly bound object (dynamic shared libraries, bundles).\nWith this marking strip knows not to strip these symbols.",27,null],[11,"lib_ordinal","","The ordinal recorded references the libraries listed in the Mach-O file",27,null],[11,"is_no_dead_strip","","symbol is not to be dead stripped",27,null],[11,"is_discarded","","symbol is discarded",27,null],[11,"is_weak_ref","","symbol is weak referenced",27,null],[11,"is_weak_def","","coalesed symbol is a weak definition",27,null],[11,"is_ref_to_weak","","reference to a weak symbol",27,null],[11,"is_arm_thumb_def","","symbol is a Thumb function (ARM)",27,null],[11,"is_resolver","","the function is actually a resolver function and\nshould be called to get the address of the real function to use.",27,null],[11,"is_alt_entry","","symbol is pinned to the previous content.",27,null],[8,"SymbolReader","","Read symbols from a Mach-O file",null,null],[16,"Iter","","",28,null],[10,"symbols","","Read symbols from Mach-O file",28,null],[11,"read_fixed_size_string","","Read the fixed size string",26,null],[11,"ref_type","","types of references",27,null],[11,"is_ref_dyn","","To simplify stripping of objects that use are used with the dynamic link\neditor, the static link editor marks the symbols defined an object that are\nreferenced by a dynamicly bound object (dynamic shared libraries, bundles).\nWith this marking strip knows not to strip these symbols.",27,null],[11,"lib_ordinal","","The ordinal recorded references the libraries listed in the Mach-O file",27,null],[11,"is_no_dead_strip","","symbol is not to be dead stripped",27,null],[11,"is_discarded","","symbol is discarded",27,null],[11,"is_weak_ref","","symbol is weak referenced",27,null],[11,"is_weak_def","","coalesed symbol is a weak definition",27,null],[11,"is_ref_to_weak","","reference to a weak symbol",27,null],[11,"is_arm_thumb_def","","symbol is a Thumb function (ARM)",27,null],[11,"is_resolver","","the function is actually a resolver function and\nshould be called to get the address of the real function to use.",27,null],[11,"is_alt_entry","","symbol is pinned to the previous content.",27,null]],"paths":[[3,"LcString"],[3,"FvmLib"],[3,"DyLib"],[3,"DyLibTocEntry"],[3,"DyLibModule"],[3,"LinkEditData"],[3,"Section"],[3,"DataInCodeEntry"],[3,"MachHeader"],[3,"MachCommand"],[3,"FatArch"],[3,"FatHeader"],[3,"ArHeader"],[3,"RanLib"],[4,"Error"],[4,"BuildTarget"],[4,"LoadCommand"],[4,"OFile"],[4,"Symbol"],[3,"SegmentFlags"],[3,"SectionAttributes"],[3,"ExportSymbolFlags"],[3,"VersionTag"],[3,"SourceVersionTag"],[3,"SectionFlags"],[3,"SymbolIter"],[8,"ReadStringExt"],[8,"SymbolReference"],[8,"SymbolReader"]]};
initSearch(searchIndex);
